import os
from multiprocessing import Process
import time
import numpy as np
import argparse

parser = argparse.ArgumentParser(description='BNN learning several tasks in a row, metaplasticity is controlled by the argument meta.')
parser.add_argument('--scenario', type = str, default = 'class-incre', metavar = 'Scenarios', help='class-incre or task-incre')
parser.add_argument('--ac-meta', type = str, default = 'exp', metavar = 'Meta Activation', help='Choice of meta activation functions')
parser.add_argument('--ep-inference', default = False, action = 'store_true', help='whether use the episode inference generated by ANN')
parser.add_argument('--meta_all', type = float, nargs = '+', default = [0], metavar = 'meta value choice')
parser.add_argument('--dataset_all', type = str, nargs = '+', default = ['cifar100'], metavar = 'Dataset')
args = parser.parse_args()

gpu_list=[1,2]
activation_choice=args.ac_meta

def exe(cmd):
    os.system(cmd)

def task_CH_HNN():
    cnt=0
    # meta_all=['0.5 ','2 ','5 ','8 ']
    meta_all=args.meta_all
    gate_num_all=[5]
    meta_ac=['exp']#'exp' or 'sigmoid' or 'tanh'
    lambda_all=[1]
    seed_all = [i for i in range(222,333,111)]
    # noise_fac = ['0.50',]
    noise_num = [1]
    dataset_all=args.dataset_all#dataset='pMNIST'/'sMNIST'/'cifar100'/'tinyimage'/'dvsG'
    neuron_model = ['EIF',]#['EIF','LIF','IF']
    tau_all=[1,]
    scenario=args.scenario
    for i, meta in enumerate(meta_all):
        for j, gate_num in enumerate(gate_num_all):
            for z, activation_choice in enumerate(meta_ac):
                for v, labmi in enumerate(lambda_all):
                    for n in noise_num:
                        for _, dataset in enumerate(dataset_all):
                            for tau in tau_all:
                                for neuron in neuron_model:
                                    for s, seedi in enumerate(seed_all):
                                        cnt=cnt+1
                                        gpu=gpu_list[cnt%len(gpu_list)]
                                        cmd='python main.py --loss "ce" --out-off 0 --type-of-head "mask" '
                                        cmd+=' --scenario {}'.format(scenario)
                                        cmd+=' --meta-ac ' + activation_choice
                                        # cmd+=' --optim "Adam" --net "ann" --norm "" --si --si-lambda {} '.format(labmi)
                                        # cmd+=' --net "ann" --norm "" --xdg --gate-prob 0.5'
                                        cmd+=' --net "snn" --norm "bn" --optim "SGD" '
                                        # cmd+=' --optim "Adam" --net "ann" --norm "" --ewc --ewc-lambda {} '.format(labmi)
                                        cmd+=' --device {} '.format(gpu)
                                        cmd+=' --seed {} '.format(seedi)
                                        cmd+=' --meta {} '.format(meta)
                                        cmd+=' --neuron-model {} '.format(neuron)
                                        cmd+=' --tau {} '.format(tau)
                                        cmd+=' --dataset {} '.format(dataset)
                                        if dataset == 'cifar100':
                                            cmd+=' --task-num 19 '
                                            cmd+=' --in-size 768 '
                                            cmd+=' --task-sequence 5 '
                                            cmd+=' --class-per-task 5 '
                                            cmd+=' --batch-size 128 '
                                            cmd+=' --out-size 100 '
                                            cmd+=' --wins 10 '
                                            cmd+=' --epochs-per-task 5 '
                                            cmd+=' --lr 0.1 '
                                            cmd+=' --tau 1.0 '
                                            hidden_neurons=64
                                            ann_channel=256
                                        elif dataset == 'tinyimage':
                                            cmd+=' --task-num 39 '
                                            cmd+=' --out-size 200 '
                                            cmd+=' --in-size 768 '
                                            cmd+=' --task-sequence 5 '
                                            cmd+=' --class-per-task 5 '
                                            cmd+=' --batch-size 128 '
                                            cmd+=' --wins 10 '
                                            cmd+=' --epochs-per-task 5 '
                                            cmd+=' --tau 1.0 '
                                            cmd+=' --lr 0.1 '
                                            hidden_neurons=64
                                            ann_channel=256
                                        elif dataset == 'sMNIST':
                                            cmd+=' --task-num 4 ' 
                                            cmd+=' --in-size 784 '
                                            cmd+=' --task-sequence 2 '
                                            cmd+=' --class-per-task 2 '
                                            cmd+=' --batch-size 128 '
                                            cmd+=' --out-size 10 '
                                            cmd+=' --wins 10 '
                                            cmd+=' --epochs-per-task 5 '
                                            cmd+=' --lr 0.005 '
                                            cmd+=' --neuron-model "LIF" '
                                            cmd+=' --tau 0.25 '
                                            hidden_neurons=16
                                            if scenario=='task-incre':
                                                ann_channel=256
                                                hidden_neurons=16
                                                cmd+=' --meta 50 '
                                            elif scenario=='class-incre':
                                                ann_channel=64
                                                hidden_neurons=32
                                                cmd+=' --meta 0.5 '
                                        elif dataset == 'pMNIST':
                                            cmd+=' --load-bn '
                                            cmd+=' --task-num 40 ' 
                                            cmd+=' --in-size 784 '
                                            cmd+=' --task-sequence 1 '
                                            cmd+=' --class-per-task 10 '
                                            cmd+=' --batch-size 128 '
                                            cmd+=' --out-size 10 '
                                            cmd+=' --wins 10 '
                                            cmd+=' --epochs-per-task 5 '
                                            cmd+=' --lr 0.005 '
                                            cmd+=' --neuron-model "LIF" '
                                            cmd+=' --tau 0.25 '
                                            hidden_neurons=64
                                        elif dataset == 'dvsG':
                                            cmd+=' --task-num 3 ' 
                                            cmd+=' --in-size 32768 '
                                            cmd+=' --task-sequence 2 '
                                            cmd+=' --class-per-task 3 '
                                            cmd+=' --batch-size 128 '
                                            cmd+=' --out-size 11 '
                                            cmd+=' --wins 10 '
                                            cmd+=' --epochs-per-task 10 '
                                            cmd+=' --lr 0.01 '
                                            hidden_neurons=128
                                            ann_channel=256
                                        if args.ep_inference:
                                            cmd+=' --gate '
                                            cmd+=' --gate-num {} '.format(gate_num)
                                            cmd+=' --gate-type "generate-train-test" '
                                            if args.scenario=='class-incre':
                                                cmd+=' --sort-gate-train "sample" '
                                                cmd+=' --sort-gate-test "sample" '
                                            elif args.scenario=='task-incre':
                                                cmd+=' --sort-gate-train "mean" '
                                                cmd+=' --sort-gate-test "mean" '
                                        cmd+=' --ms-path "./ANN_Prior/{0}_{1}/exp_gate{2}/" '.format(scenario, dataset, hidden_neurons)
                                        # cmd+=' --ms-path "./ANN_Prior/Continual_ANN_{0}/exp_gate{1}/models/gate_net_1.pth" '.format(dataset, hidden_neurons)
                                        # cmd+=' --ms-path "./ANN_Prior/Imagenet_Prior/" '
                                        cmd+=' --hidden-layers {0} {0} '.format(hidden_neurons)
                                        cmd+=' --ann-channels {} '.format(ann_channel)
                                        print(cmd)
                                        p = Process(target=exe, args=(cmd,))
                                        p.start()
                                        time.sleep(5)



task_CH_HNN()
